/* ANSI-C code produced by gperf version 3.0.4 */
/* Command-line: /usr/bin/gperf -L ANSI-C -t --ignore-case -N lookup_syscall -H hash_syscall_name -p -C  */
/* Computed positions: -k'1-2,4-9,$' */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
#endif

struct syscall_name { const char* name; int id; };

#define TOTAL_KEYWORDS 326
#define MIN_WORD_LENGTH 3
#define MAX_WORD_LENGTH 22
#define MIN_HASH_VALUE 3
#define MAX_HASH_VALUE 1869
/* maximum key range = 1867, duplicates = 0 */

#ifndef GPERF_DOWNCASE
#define GPERF_DOWNCASE 1
static unsigned char gperf_downcase[256] =
  {
      0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,
     15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,
     30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,
     45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,
     60,  61,  62,  63,  64,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106,
    107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
    122,  91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
    135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
    165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
    195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
    225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
    255
  };
#endif

#ifndef GPERF_CASE_STRCMP
#define GPERF_CASE_STRCMP 1
static int
gperf_case_strcmp (register const char *s1, register const char *s2)
{
  for (;;)
    {
      unsigned char c1 = gperf_downcase[(unsigned char)*s1++];
      unsigned char c2 = gperf_downcase[(unsigned char)*s2++];
      if (c1 != 0 && c1 == c2)
        continue;
      return (int)c1 - (int)c2;
    }
}
#endif

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
hash_syscall_name (register const char *str, register unsigned int len)
{
  static const unsigned short asso_values[] =
    {
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,    5,
         5,    0,    0, 1870,    5, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870,  185,  465,   15,    5,    0,
         5,   10,  225,    5,  510,  295,   80,   50,  250,   25,
       120,  315,   10,    0,    0,  165,  320,  450,  430,  185,
      1870, 1870, 1870, 1870, 1870,    5,  235,  185,  465,   15,
         5,    0,    5,   10,  225,    5,  510,  295,   80,   50,
       250,   25,  120,  315,   10,    0,    0,  165,  320,  450,
       430,  185, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
      1870, 1870, 1870, 1870, 1870, 1870, 1870
    };
  register int hval = len;

  switch (hval)
    {
      default:
        hval += asso_values[(unsigned char)str[8]];
      /*FALLTHROUGH*/
      case 8:
        hval += asso_values[(unsigned char)str[7]];
      /*FALLTHROUGH*/
      case 7:
        hval += asso_values[(unsigned char)str[6]];
      /*FALLTHROUGH*/
      case 6:
        hval += asso_values[(unsigned char)str[5]];
      /*FALLTHROUGH*/
      case 5:
        hval += asso_values[(unsigned char)str[4]];
      /*FALLTHROUGH*/
      case 4:
        hval += asso_values[(unsigned char)str[3]+1];
      /*FALLTHROUGH*/
      case 3:
      case 2:
        hval += asso_values[(unsigned char)str[1]];
      /*FALLTHROUGH*/
      case 1:
        hval += asso_values[(unsigned char)str[0]];
        break;
    }
  return hval + asso_values[(unsigned char)str[len - 1]];
}

#ifdef __GNUC__
__inline
#if defined __GNUC_STDC_INLINE__ || defined __GNUC_GNU_INLINE__
__attribute__ ((__gnu_inline__))
#endif
#endif
const struct syscall_name *
lookup_syscall (register const char *str, register unsigned int len)
{
  static const struct syscall_name wordlist[] =
    {
      {(char*)0}, {(char*)0}, {(char*)0},
      {"tee", __NR_tee},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"time", __NR_time},
      {"times", __NR_times},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"read", __NR_read},
      {(char*)0},
      {"setsid", __NR_setsid},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"select", __NR_select},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"setns", __NR_setns},
      {"getsid", __NR_getsid},
      {(char*)0},
      {"setregid", __NR_setregid},
      {"setresgid", __NR_setresgid},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"timer_settime", __NR_timer_settime},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"setfsgid", __NR_setfsgid},
      {"getresgid", __NR_getresgid},
      {(char*)0}, {(char*)0},
      {"getegid", __NR_getegid},
      {"timer_gettime", __NR_timer_gettime},
      {(char*)0},
      {"timerfd_settime", __NR_timerfd_settime},
      {"fchdir", __NR_fchdir},
      {(char*)0},
      {"sched_setattr", __NR_sched_setattr},
      {(char*)0}, {(char*)0},
      {"sendto", __NR_sendto},
      {(char*)0},
      {"sched_setscheduler", __NR_sched_setscheduler},
      {(char*)0},
      {"timerfd_gettime", __NR_timerfd_gettime},
      {(char*)0},
      {"timer_create", __NR_timer_create},
      {"sched_getattr", __NR_sched_getattr},
      {"timerfd_create", __NR_timerfd_create},
      {"fsync", __NR_fsync},
      {(char*)0}, {(char*)0},
      {"sched_getscheduler", __NR_sched_getscheduler},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"ioprio_set", __NR_ioprio_set},
      {(char*)0},
      {"sendmsg", __NR_sendmsg},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"ioprio_get", __NR_ioprio_get},
      {(char*)0},
      {"connect", __NR_connect},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"sched_setparam", __NR_sched_setparam},
      {"rt_sigtimedwait", __NR_rt_sigtimedwait},
      {(char*)0}, {(char*)0},
      {"sendfile", __NR_sendfile},
      {(char*)0},
      {"close", __NR_close},
      {(char*)0},
      {"mincore", __NR_mincore},
      {"delete_module", __NR_delete_module},
      {"sched_getparam", __NR_sched_getparam},
      {"mount", __NR_mount},
      {(char*)0},
      {"memfd_create", __NR_memfd_create},
      {(char*)0}, {(char*)0},
      {"msync", __NR_msync},
      {"socket", __NR_socket},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"timer_delete", __NR_timer_delete},
      {(char*)0}, {(char*)0},
      {"clone", __NR_clone},
      {(char*)0}, {(char*)0},
      {"sendmmsg", __NR_sendmmsg},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"pipe", __NR_pipe},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"pipe2", __NR_pipe2},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"setrlimit", __NR_setrlimit},
      {(char*)0},
      {"ioperm", __NR_ioperm},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"sched_rr_get_interval", __NR_sched_rr_get_interval},
      {(char*)0}, {(char*)0},
      {"getrlimit", __NR_getrlimit},
      {(char*)0},
      {"reboot", __NR_reboot},
      {(char*)0}, {(char*)0},
      {"iopl", __NR_iopl},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"stat", __NR_stat},
      {(char*)0},
      {"semctl", __NR_semctl},
      {(char*)0}, {(char*)0},
      {"dup3", __NR_dup3},
      {(char*)0},
      {"statfs", __NR_statfs},
      {(char*)0}, {(char*)0},
      {"dup2", __NR_dup2},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"_sysctl", __NR__sysctl},
      {"setreuid", __NR_setreuid},
      {"setresuid", __NR_setresuid},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"gettid", __NR_gettid},
      {(char*)0},
      {"setfsuid", __NR_setfsuid},
      {"getresuid", __NR_getresuid},
      {"sysfs", __NR_sysfs},
      {"syncfs", __NR_syncfs},
      {"geteuid", __NR_geteuid},
      {"pselect6", __NR_pselect6},
      {(char*)0}, {(char*)0},
      {"capset", __NR_capset},
      {(char*)0},
      {"rt_sigsuspend", __NR_rt_sigsuspend},
      {"sync", __NR_sync},
      {(char*)0},
      {"access", __NR_access},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"msgctl", __NR_msgctl},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"shmdt", __NR_shmdt},
      {"semget", __NR_semget},
      {"sched_setaffinity", __NR_sched_setaffinity},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"sched_yield", __NR_sched_yield},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"sched_getaffinity", __NR_sched_getaffinity},
      {"truncate", __NR_truncate},
      {(char*)0}, {(char*)0},
      {"setgid", __NR_setgid},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"getgid", __NR_getgid},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"io_destroy", __NR_io_destroy},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"getdents", __NR_getdents},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"getdents64", __NR_getdents64},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"poll", __NR_poll},
      {(char*)0},
      {"msgget", __NR_msgget},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"syslog", __NR_syslog},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"epoll_create", __NR_epoll_create},
      {"dup", __NR_dup},
      {(char*)0},
      {"membarrier", __NR_membarrier},
      {(char*)0},
      {"rt_sigreturn", __NR_rt_sigreturn},
      {"epoll_create1", __NR_epoll_create1},
      {(char*)0},
      {"sync_file_range", __NR_sync_file_range},
      {"timer_getoverrun", __NR_timer_getoverrun},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"pause", __NR_pause},
      {"fchmod", __NR_fchmod},
      {"sched_get_priority_min", __NR_sched_get_priority_min},
      {"mprotect", __NR_mprotect},
      {"signalfd4", __NR_signalfd4},
      {(char*)0},
      {"msgsnd", __NR_msgsnd},
      {(char*)0},
      {"signalfd", __NR_signalfd},
      {(char*)0},
      {"pivot_root", __NR_pivot_root},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"seccomp", __NR_seccomp},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"accept", __NR_accept},
      {"accept4", __NR_accept4},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"setuid", __NR_setuid},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"getpid", __NR_getpid},
      {"setpgid", __NR_setpgid},
      {(char*)0}, {(char*)0},
      {"fcntl", __NR_fcntl},
      {"getuid", __NR_getuid},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"linkat", __NR_linkat},
      {"getpgid", __NR_getpgid},
      {(char*)0}, {(char*)0},
      {"ioctl", __NR_ioctl},
      {"openat", __NR_openat},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"semop", __NR_semop},
      {(char*)0},
      {"eventfd", __NR_eventfd},
      {"epoll_ctl_old", __NR_epoll_ctl_old},
      {"acct", __NR_acct},
      {"alarm", __NR_alarm},
      {(char*)0}, {(char*)0},
      {"eventfd2", __NR_eventfd2},
      {(char*)0},
      {"chmod", __NR_chmod},
      {(char*)0}, {(char*)0},
      {"migrate_pages", __NR_migrate_pages},
      {"getrusage", __NR_getrusage},
      {"semtimedop", __NR_semtimedop},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"faccessat", __NR_faccessat},
      {(char*)0},
      {"chroot", __NR_chroot},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"shmctl", __NR_shmctl},
      {(char*)0},
      {"setxattr", __NR_setxattr},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"getpmsg", __NR_getpmsg},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"getxattr", __NR_getxattr},
      {"fork", __NR_fork},
      {"move_pages", __NR_move_pages},
      {(char*)0}, {(char*)0},
      {"clock_settime", __NR_clock_settime},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"rt_sigpending", __NR_rt_sigpending},
      {(char*)0},
      {"utime", __NR_utime},
      {"utimes", __NR_utimes},
      {"clock_getres", __NR_clock_getres},
      {"clock_gettime", __NR_clock_gettime},
      {"open", __NR_open},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"kexec_file_load", __NR_kexec_file_load},
      {"capget", __NR_capget},
      {(char*)0}, {(char*)0},
      {"kill", __NR_kill},
      {"socketpair", __NR_socketpair},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"epoll_ctl", __NR_epoll_ctl},
      {"arch_prctl", __NR_arch_prctl},
      {(char*)0}, {(char*)0},
      {"io_setup", __NR_io_setup},
      {(char*)0}, {(char*)0},
      {"mlock2", __NR_mlock2},
      {"settimeofday", __NR_settimeofday},
      {(char*)0}, {(char*)0},
      {"set_tid_address", __NR_set_tid_address},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"ppoll", __NR_ppoll},
      {"shmget", __NR_shmget},
      {"gettimeofday", __NR_gettimeofday},
      {(char*)0}, {(char*)0},
      {"prctl", __NR_prctl},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"link", __NR_link},
      {(char*)0},
      {"keyctl", __NR_keyctl},
      {"getppid", __NR_getppid},
      {(char*)0}, {(char*)0},
      {"restart_syscall", __NR_restart_syscall},
      {"getcpu", __NR_getcpu},
      {(char*)0}, {(char*)0},
      {"fallocate", __NR_fallocate},
      {"fstat", __NR_fstat},
      {"sethostname", __NR_sethostname},
      {(char*)0}, {(char*)0},
      {"bind", __NR_bind},
      {"mknod", __NR_mknod},
      {"getcwd", __NR_getcwd},
      {"fstatfs", __NR_fstatfs},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"rt_sigaction", __NR_rt_sigaction},
      {(char*)0},
      {"rt_sigprocmask", __NR_rt_sigprocmask},
      {"setsockopt", __NR_setsockopt},
      {(char*)0},
      {"sched_get_priority_max", __NR_sched_get_priority_max},
      {"fchmodat", __NR_fchmodat},
      {(char*)0},
      {"creat", __NR_creat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"getsockopt", __NR_getsockopt},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"lookup_dcookie", __NR_lookup_dcookie},
      {"tkill", __NR_tkill},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"fanotify_init", __NR_fanotify_init},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"setdomainname", __NR_setdomainname},
      {(char*)0}, {(char*)0},
      {"rename", __NR_rename},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"recvmsg", __NR_recvmsg},
      {(char*)0},
      {"mmap", __NR_mmap},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"rt_sigqueueinfo", __NR_rt_sigqueueinfo},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"lstat", __NR_lstat},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"setgroups", __NR_setgroups},
      {"mbind", __NR_mbind},
      {(char*)0},
      {"rt_tgsigqueueinfo", __NR_rt_tgsigqueueinfo},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"getgroups", __NR_getgroups},
      {(char*)0},
      {"setpriority", __NR_setpriority},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"getpriority", __NR_getpriority},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"create_module", __NR_create_module},
      {"getrandom", __NR_getrandom},
      {(char*)0}, {(char*)0},
      {"io_getevents", __NR_io_getevents},
      {"recvmmsg", __NR_recvmmsg},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"getpgrp", __NR_getpgrp},
      {"bpf", __NR_bpf},
      {"setitimer", __NR_setitimer},
      {"rmdir", __NR_rmdir},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"exit", __NR_exit},
      {(char*)0}, {(char*)0},
      {"tuxcall", __NR_tuxcall},
      {(char*)0},
      {"getitimer", __NR_getitimer},
      {(char*)0},
      {"ptrace", __NR_ptrace},
      {"mq_timedsend", __NR_mq_timedsend},
      {"recvfrom", __NR_recvfrom},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"pread64", __NR_pread64},
      {"mq_getsetattr", __NR_mq_getsetattr},
      {(char*)0},
      {"mq_timedreceive", __NR_mq_timedreceive},
      {"userfaultfd", __NR_userfaultfd},
      {"finit_module", __NR_finit_module},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"unshare", __NR_unshare},
      {(char*)0},
      {"readahead", __NR_readahead},
      {"kexec_load", __NR_kexec_load},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"write", __NR_write},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"ustat", __NR_ustat},
      {(char*)0},
      {"inotify_init", __NR_inotify_init},
      {(char*)0}, {(char*)0},
      {"newfstatat", __NR_newfstatat},
      {(char*)0}, {(char*)0},
      {"inotify_init1", __NR_inotify_init1},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"splice", __NR_splice},
      {(char*)0}, {(char*)0},
      {"io_cancel", __NR_io_cancel},
      {"readv", __NR_readv},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"fadvise64", __NR_fadvise64},
      {(char*)0}, {(char*)0},
      {"mknodat", __NR_mknodat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"vserver", __NR_vserver},
      {(char*)0}, {(char*)0},
      {"uname", __NR_uname},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"putpmsg", __NR_putpmsg},
      {"set_mempolicy", __NR_set_mempolicy},
      {(char*)0},
      {"lseek", __NR_lseek},
      {"init_module", __NR_init_module},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"flock", __NR_flock},
      {(char*)0}, {(char*)0},
      {"get_mempolicy", __NR_get_mempolicy},
      {(char*)0},
      {"nfsservctl", __NR_nfsservctl},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"shmat", __NR_shmat},
      {(char*)0},
      {"madvise", __NR_madvise},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"remap_file_pages", __NR_remap_file_pages},
      {(char*)0}, {(char*)0},
      {"prlimit64", __NR_prlimit64},
      {(char*)0},
      {"msgrcv", __NR_msgrcv},
      {(char*)0},
      {"security", __NR_security},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"name_to_handle_at", __NR_name_to_handle_at},
      {"renameat", __NR_renameat},
      {(char*)0},
      {"flistxattr", __NR_flistxattr},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"io_submit", __NR_io_submit},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"renameat2", __NR_renameat2},
      {"mlock", __NR_mlock},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"mremap", __NR_mremap},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"kcmp", __NR_kcmp},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"listen", __NR_listen},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"execve", __NR_execve},
      {"query_module", __NR_query_module},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"tgkill", __NR_tgkill},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"brk", __NR_brk},
      {(char*)0},
      {"chdir", __NR_chdir},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"getpeername", __NR_getpeername},
      {(char*)0}, {(char*)0},
      {"ftruncate", __NR_ftruncate},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"getsockname", __NR_getsockname},
      {(char*)0},
      {"vmsplice", __NR_vmsplice},
      {(char*)0},
      {"llistxattr", __NR_llistxattr},
      {"process_vm_readv", __NR_process_vm_readv},
      {"process_vm_writev", __NR_process_vm_writev},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"umount2", __NR_umount2},
      {(char*)0},
      {"mq_notify", __NR_mq_notify},
      {"wait4", __NR_wait4},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"umask", __NR_umask},
      {(char*)0},
      {"swapoff", __NR_swapoff},
      {(char*)0},
      {"fsetxattr", __NR_fsetxattr},
      {"get_kernel_syms", __NR_get_kernel_syms},
      {(char*)0}, {(char*)0},
      {"fanotify_mark", __NR_fanotify_mark},
      {(char*)0}, {(char*)0},
      {"waitid", __NR_waitid},
      {(char*)0}, {(char*)0},
      {"fgetxattr", __NR_fgetxattr},
      {(char*)0},
      {"request_key", __NR_request_key},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"fdatasync", __NR_fdatasync},
      {"readlinkat", __NR_readlinkat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"set_thread_area", __NR_set_thread_area},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"utimensat", __NR_utimensat},
      {(char*)0},
      {"personality", __NR_personality},
      {(char*)0},
      {"mlockall", __NR_mlockall},
      {(char*)0},
      {"get_thread_area", __NR_get_thread_area},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"inotify_rm_watch", __NR_inotify_rm_watch},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"modify_ldt", __NR_modify_ldt},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"mkdir", __NR_mkdir},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"nanosleep", __NR_nanosleep},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"lsetxattr", __NR_lsetxattr},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"listxattr", __NR_listxattr},
      {(char*)0},
      {"munmap", __NR_munmap},
      {(char*)0}, {(char*)0},
      {"lgetxattr", __NR_lgetxattr},
      {(char*)0},
      {"afs_syscall", __NR_afs_syscall},
      {"munlock", __NR_munlock},
      {(char*)0}, {(char*)0},
      {"epoll_wait", __NR_epoll_wait},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"epoll_wait_old", __NR_epoll_wait_old},
      {"set_robust_list", __NR_set_robust_list},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"vfork", __NR_vfork},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"futimesat", __NR_futimesat},
      {"get_robust_list", __NR_get_robust_list},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"exit_group", __NR_exit_group},
      {(char*)0}, {(char*)0},
      {"readlink", __NR_readlink},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"execveat", __NR_execveat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"munlockall", __NR_munlockall},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"perf_event_open", __NR_perf_event_open},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"symlinkat", __NR_symlinkat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"vhangup", __NR_vhangup},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"sysinfo", __NR_sysinfo},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"quotactl", __NR_quotactl},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"epoll_pwait", __NR_epoll_pwait},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"fchownat", __NR_fchownat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"futex", __NR_futex},
      {"sigaltstack", __NR_sigaltstack},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"inotify_add_watch", __NR_inotify_add_watch},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"mkdirat", __NR_mkdirat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"open_by_handle_at", __NR_open_by_handle_at},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"removexattr", __NR_removexattr},
      {"symlink", __NR_symlink},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"pwrite64", __NR_pwrite64},
      {(char*)0}, {(char*)0},
      {"fchown", __NR_fchown},
      {"add_key", __NR_add_key},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"mq_open", __NR_mq_open},
      {"clock_adjtime", __NR_clock_adjtime},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"uselib", __NR_uselib},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"lchown", __NR_lchown},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"chown", __NR_chown},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"clock_nanosleep", __NR_clock_nanosleep},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"preadv", __NR_preadv},
      {"fremovexattr", __NR_fremovexattr},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"writev", __NR_writev},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0},
      {"adjtimex", __NR_adjtimex},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"swapon", __NR_swapon},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"lremovexattr", __NR_lremovexattr},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"shutdown", __NR_shutdown},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {"unlinkat", __NR_unlinkat},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"pwritev", __NR_pwritev},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0},
      {"unlink", __NR_unlink},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0}, {(char*)0}, {(char*)0}, {(char*)0},
      {(char*)0},
      {"mq_unlink", __NR_mq_unlink}
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register int key = hash_syscall_name (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          register const char *s = wordlist[key].name;

          if (s && (((unsigned char)*str ^ (unsigned char)*s) & ~32) == 0 && !gperf_case_strcmp (str, s))
            return &wordlist[key];
        }
    }
  return 0;
}
